1.tomcat编码
 	不强制tomcat编码类型，只需要在config.properties配置文件上，设置tomcat的编码tomcat.encode=ISO-8859-1
	servlet使用get的地方调用方法即可，String decode = StaticMethod.tomcatDecode(code);
	
2.cas服务端页面的编码
	在cas.properites上设置cas.server.encode=UTF-8
	使用类：org.jasig.cas.client.validation.Cas20ServiceTicketValidator，
		它在访问服务端时，默认使用GBK接收，所以需要更改

3.按mvc结果，各层作用说明
  1)action
  	接收来自ActionServlet的请求，并根据该请求调用模型的业务逻辑方法处理请求，并将处理结果返回给JSP页面显示
  2）service
  	接收action层的请求，调用dao读取数据库，然后处理数据并返回结果
  	需要json数据格式的请求，返回json对象，而非字符串
  3）dao
  	接受service层的请求，从数据库读取数据，并返回
  	根据传入的参数组装sql语句，将读取的结果直接返回
  	添加: UtilDao.save(obj)
  	查询: UtilDao.find*()
  	修改: update(obj)
  	删除: delete(id, obj)
  4）InitData
  	保存从配置文件读取的信息
  5）StaticData
  	保存静态数据，主要是从数据库读取的，尽量少保存在这里，维护困难，直接从数据库读取，不用维护，速度也不会慢
  6）StaticMethod
  	保存通用的方法
  	
4.数据库的设计
  1）状态status，尽量改为使用名称：islock，0表示否，1表示是，这样表示直观，也易维护
  
5.引用spring bean，在任何地方使用：
	SecuManager sm = (SecuManager) StaticData.context.getBean("secuManager");

6.重要URL
	生成密码
	http://127.0.0.1:8080/sshdemo/user_makePassword.action?user.account=b051&user.password=142536
 	刷新配置
	http://127.0.0.1:8080/sshdemo/common_rfall_rf.action
  
  